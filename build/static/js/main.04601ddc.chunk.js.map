{"version":3,"sources":["components/sidebar/Toggle.jsx","components/shared/BasicContainer.jsx","components/shared/VertSpacer.jsx","components/sidebar/SensorButton.jsx","components/sidebar/SensorDropdown.jsx","components/sidebar/GroupDropDown.jsx","components/sidebar/SensorSelector.jsx","components/sidebar/NameInput.jsx","assets/logo.png","components/sidebar/Sidebar.jsx","components/main/topbar/SearchBar.jsx","components/shared/HorizSpacer.jsx","assets/upload.svg","components/main/topbar/Upload.jsx","components/main/topbar/SVGButton.jsx","components/shared/RowHolder.jsx","assets/stop.svg","assets/play.svg","assets/pause.svg","components/main/topbar/ButtonTray.jsx","components/shared/StyledStatus.jsx","components/main/topbar/Topbar.jsx","components/main/data-display/NumGraphToggle.jsx","assets/scrollleft.svg","assets/scrollright.svg","assets/zoomin.svg","assets/zoomout.svg","components/main/data-display/Graph.jsx","components/main/data-display/Graphs.jsx","components/main/data-display/Number.jsx","components/shared/Context.jsx","components/main/data-display/Numbers.jsx","components/main/data-display/DataDisplay.jsx","components/main/Main.jsx","App.jsx","index.js"],"names":["Toggle","props","Holder","ToggleButton","active","isLive","onClick","setIsLive","Circle","styled","div","BasicContainer","Container","isFlex","flex","expand","scroll","children","VertSpacer","Spacer","SensorButton","state","e","previous","this","selectedSensors","setCurrentSensors","filter","element","label","target","value","forceUpdate","StyledButton","removeSelected","SmallVertSpace","Component","button","SensorDropdown","options","ExampleSensorsByGroups","map","e1","group","selectedGroup","sensors","e2","id","flat","selected","prevProps","updateSelectedGroup","updateOptions","newSelectedGroup","setState","indexOf","concat","closeMenuOnSelect","placeholder","isMulti","every","onChange","addSelected","styles","multiValueLabel","base","width","length","clearSelected","GroupDropDown","SmallVerticalSpacer","StyledSelect","i","setSelectedGroup","ExampleGroups","StyledOption","select","option","SensorSelector","useState","SelectorContainer","newState","currentSensors","NameInput","focus","setFocus","input","setInput","StyledInput","type","onInput","onFocus","onBlur","setSessionName","onKeyDown","keyCode","blur","handleKeyPress","Sidebar","SidebarContainer","src","logo","alt","SearchBar","SearchContainer","HorizSpacer","ButtonSpacer","ButtonTray","setFile","uploadRef","useRef","UploadHolder","hidden","ref","f","files","handleFiles","Clickable","upload","height","current","click","img","SVGButton","StyledSVG","setViewState","RowHolder","StyledHolder","Topbar","stop","viewState","play","pause","StyledStatus","Status","valid","display","receiving","NumGraphToggle","handleClick","dispType","setDispType","ReferenceFrame","StyledDiv","LabelHolder","Label","Overlay","isLeft","t","initData","time","arr","obj","Math","floor","random","push","initialise","getX","d","getY","xScaleInit","scaleLinear","domain","max","range","yScaleInit","Graph","curveType","lineData","xScale","yScale","start","end","graphData","wheelTimeout","updateScales","gd","slice","lockWheel","clearTimeout","setTimeout","zoom","dir","amt","rerender","useEffect","cancelWheel","preventDefault","document","body","addEventListener","passive","removeEventListener","useTooltip","showTooltip","tooltipData","hideTooltip","tooltipTop","tooltipLeft","bisectTime","bisector","left","handleTooltip","useCallback","event","x","localPoint","graph_offset","x0","invert","index","d0","d1","valueOf","GraphContainer","checkKey","updateData","scrollleft","scrollright","zoomin","zoomout","SVGContainer","sensorName","onWheel","abs","deltaX","deltaY","handleMouseScroll","fill","size","refX","rx","ry","Group","GridRows","scale","stroke","GridColumns","top","AxisBottom","AxisLeft","j","r","cx","cy","LinePath","curve","allCurves","data","y","strokeWidth","strokeOpacity","shapeRendering","markerMid","markerStart","markerEnd","AreaClosed","Bar","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","Line","from","to","pointerEvents","strokeDasharray","fillOpacity","TooltipWithBounds","Graphs","k","Number","NumberContainer","onMouseDown","sendIndex","Value","percentage","round","unit","toString","join","Context","React","createContext","ContextProvider","Consumer","mouseX","mouseY","dragging","setMouseCoords","setDragging","Provider","Numbers","context","useContext","dndRect","setRect","xRanges","setxRanges","yRanges","setyRanges","setCurrent","startX","setStartX","dndRef","window","handleResize","ranges","getRanges","console","log","getBoundingClientRect","numberWidth","numberHeight","itemsPerRow","spaceSize","fullRows","extraItems","extraSize","tempX","Array","tempY","tempE","ind","scrollHeight","NumberTray","className","val","DataDisplay","scrollAmt","whatthefuck","containerRef","setContainerRef","updateWidth","content","clientWidth","handleScroll","scrollTop","onScroll","Main","MainContainer","App","clientX","clientY","handleMouseDown","onMouseUp","handleMouseUp","GlobalStyle","next","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.04601ddc.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default function Toggle(props) {\n  return (\n    <Holder>\n      <>\n        Live Data:\n      </>\n      <ToggleButton\n        active={props.isLive}\n        onClick={() => props.setIsLive(!props.isLive)}\n      >\n        <Circle active={props.isLive} />\n      </ToggleButton>\n    </Holder>\n  );\n}\n\nconst Holder = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ToggleButton = styled.div`\n  width: 46px;\n  height: 24px;\n  position: relative;\n  background: ${props => (props.active ? '#42D060' : '#ebebeb')};\n  transition: background 0.2s ease;\n  border-radius: 12px;\n`;\n\nconst Circle = styled.div`\n  position: absolute;\n  top: 2px;\n  left: ${props => (props.active ? 24 : 2)}px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: #fff;\n  transition: left 0.2s ease;\n`;","import styled from 'styled-components';\n\nexport default function BasicContainer(props) {\n  return (\n    <Container isFlex={props.flex} expand={props.expand} scroll={props.scroll}>\n      {props.children}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: calc(100% - 18px);\n  border: 1px solid #818181;\n  border-radius: 9px;\n  padding: 8px;\n  height: ${props => (props.expand ? '100%' : 'auto')};\n  overflow-y: ${props => (props.scroll ? 'scroll' : 'visible')};\n  display: ${props => (props.isFlex ? 'flex' : 'auto')};\n  align-items: center;\n  justify-content: center;\n`;","import styled from 'styled-components';\n\nexport default function VertSpacer() {\n  return(\n    <Spacer />\n  );\n}\n\nconst Spacer = styled.div`\n  height: 20px;\n`;","\nimport {Component} from 'react'\nimport styled from 'styled-components'\nimport BasicContainer from \"../shared/BasicContainer\";\n\nclass SensorButton extends Component {\n    \n    removeSelected(e){\n        let previous = this.props.selectedSensors\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\n        this.forceUpdate()\n    }\n    state = {  }\n    render() { \n        return ( \n        <>\n            <BasicContainer>\n                <Holder>\n                    <>{this.props.label}</>\n                    <StyledButton\n                    onClick={e => this.removeSelected(e)}\n                    value={this.props.label}>\n                        ╳\n                    </StyledButton>\n                </Holder> \n            </BasicContainer>\n            <SmallVertSpace/>\n        </>\n        );\n    }\n}\nexport default SensorButton;\n\nconst Holder = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\nlet StyledButton = styled.button`\n  width: 20px;\n  height: 20x;\n  font-size: 8px;\n  cursor: pointer;\n  border: 0px;\n  background-color: white;\n`\nlet SmallVertSpace = styled.div`\n  height: 5px;\n` ","import React, {Component} from 'react';\nimport Select from 'react-select';\nimport styled from \"styled-components\";\nimport SensorButton from './SensorButton';\n\nexport default class SensorDropdown extends Component {\n    constructor(props){\n        super(props)\n        // all available sensor options\n        this.options = ExampleSensorsByGroups.map(e1 => (\n            e1.group === this.props.selectedGroup ? e1.sensors.map(e2 => ({value: e2, label: e2, id: e2})) : []\n        )).flat();\n        // only sensors selected by user from available options\n        this.selected = []\n    }\n\n    componentDidUpdate(prevProps) {                                           \n        if (prevProps.selectedGroup !== this.props.selectedGroup) {\n            this.updateSelectedGroup(this.props.selectedGroup)\n            this.updateOptions(this.props.selectedGroup)\n\n        }\n    }\n    updateSelectedGroup(newSelectedGroup) {\n        this.setState({selectedGroup: newSelectedGroup}) \n    }\n    updateOptions(newSelectedGroup) {\n        this.options = ExampleSensorsByGroups.map(e1 => (\n            e1.group === this.props.selectedGroup ? e1.sensors.map(e2 => ({value: e2, label: e2, id: e2})) : []\n        )).flat();\n    }\n\n    addSelected(value){\n        if (value != null && -1 === this.props.selectedSensors.indexOf(value[0])){\n          this.props.setCurrentSensors(this.props.selectedSensors.concat(value))\n        }\n    }\n\n    clearSelected(e){\n      this.props.setCurrentSensors([])\n    }\n\n    removeSelected(e){\n        let previous = this.props.selectedSensors\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <>\n                <Select\n                closeMenuOnSelect={false}\n                placeholder={\"Select from \" + this.props.selectedGroup + \"...\"}\n                isMulti={true}\n                options={this.options.filter((element) => (this.props.selectedSensors.every((e) => e.label !== element.label)))}\n                value={this.props.selectedGroup}\n                onChange={(e) => this.addSelected(e)}\n                styles={{\n                    multiValueLabel: (base) => ({\n                      ...base,\n                      width:'100px',\n                      'font-size':'16px'\n                    }),\n                  }}\n                />\n                <SmallVertSpace/>\n                {this.props.selectedSensors.length !== 0 &&  <StyledButton onClick={e => this.clearSelected()}>Clear All</StyledButton>}\n                {this.props.selectedSensors.map((e) => \n                (<SensorButton \n                  onClick={this.removeSelected} \n                  label={e.label} \n                  selectedSensors={this.props.selectedSensors} \n                  setCurrentSensors={this.props.setCurrentSensors}/>))}\n            </>\n\n\n\n        )\n    }\n}\n\n\n//{this.selected.map((x) => (<p>{x.label}</p>))}\nlet ExampleSensorsByGroups = [\n    {group:\"Safety Sensors\", sensors: [\"Sensor A\", \"Sensor B\", \"Sensor C\", \"Sensor Q\", \"Sensor R\", \"Sensor S\", \"Sensor T\", \"Sensor U\", \"Sensor V\"]},\n    {group:\"Chasis Sensors\", sensors: [\"Sensor D\", \"Sensor E\", \"Sensor F\"]},\n    {group:\"Aero Sensors\", sensors: [\"Sensor G\", \"Sensor H\", \"Sensor I\"]},\n    {group:\"Suspension Sensors\", sensors: [\"Sensor J\", \"Sensor K\", \"Sensor L\"]},\n    {group:\"Powertrain Sensors\", sensors: [\"Sensor M\", \"Sensor N\", \"Sensor O\"]}\n  ];\n\n\nlet StyledButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  cursor: pointer;\n  border: 0px;\n  background-color: white;\n`\nlet SmallVertSpace = styled.div`\n  height: 10px;\n`","import React from 'react';\nimport styled from 'styled-components';\n\n\n\nexport default function GroupDropDown(props){\n\n    const handleOption = (i) => {\n        props.setSelectedGroup(i.target.value)\n    }\n \n    return (\n        <>\n            <>Select Sensor Group:</>\n            <SmallVerticalSpacer></SmallVerticalSpacer>\n            <StyledSelect onChange={handleOption}>\n             {ExampleGroups.map((e, i) => \n                (<StyledOption key={i}>{e.group}</StyledOption>))}\n            </StyledSelect>\n        </>\n    )\n}\n\n// update so that the selector fills the container\nexport const StyledSelect = styled.select`\n    width: 220px;\n    height: 30px;\n    font-size: 14px;\n    font-family: 'Open Sans';\n    cursor: pointer;\n`;\nexport const StyledOption = styled.option`\n    font-size: 14px;\n    cursor: pointer;\n`;\n\nexport const SmallVerticalSpacer = styled.div`\n    height: 10px;\n`;\n\nlet ExampleGroups = [\n    {id: 1, group:\"Safety Sensors\"},\n    {id: 2, group:\"Chasis Sensors\"},\n    {id: 3, group:\"Aero Sensors\"},\n    {id: 4, group:\"Suspension Sensors\"},\n    {id: 5, group:\"Powertrain Sensors\"}\n];","import { useState } from 'react';\nimport styled from 'styled-components';\n\nimport BasicContainer from '../shared/BasicContainer';\nimport VertSpacer from '../shared/VertSpacer';\nimport SensorDropdown from './SensorDropdown';\nimport GroupDropDown from './GroupDropDown';\n\nexport default function SensorSelector(props) {\n  let [selectedGroup, setSelectedGroup] = useState('Safety Sensors');\n\n  return(\n    <SelectorContainer>\n      <BasicContainer>\n        <GroupDropDown \n        selectedGroup={selectedGroup}\n        setSelectedGroup={(newState) => setSelectedGroup(newState)}\n        />\n      </BasicContainer>\n      <VertSpacer />\n      <BasicContainer expand>\n        <SensorDropdown \n        selectedGroup={selectedGroup}\n        selectedSensors={props.currentSensors}\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\n        />\n      </BasicContainer>\n    </SelectorContainer>\n  );\n}\n\nconst SelectorContainer = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n\n","import { useState } from 'react';\nimport styled from 'styled-components';\n\nimport BasicContainer from '../shared/BasicContainer';\n\nexport default function NameInput(props) {\n  let [focus, setFocus] = useState(false);\n  let [input, setInput] = useState('');\n\n  const handleKeyPress = (e) => {\n      if (e.keyCode === 13) {\n          e.target.blur();\n      }\n  }\n\n  const handleBlur = () => {\n      setFocus(false);\n      props.setSessionName(input);\n  }\n\n  return(\n    <BasicContainer flex>\n        <StyledInput \n            type=\"text\" \n            placeholder = \"Enter Session Name.\"\n            value={input}\n            onInput={(e) => setInput(e.target.value)}\n            onFocus={(e) => setFocus(true)}\n            onBlur={(e) => handleBlur()}\n            onKeyDown={(e) => {handleKeyPress(e)}}\n            focus={focus}\n        />\n    </BasicContainer>\n  );\n}\n\nconst StyledInput = styled.input`\n    border: none;\n    padding-top: 3px;\n    width: 100%;\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\n    ::placeholder {\n        font-weight: normal;\n    }\n    text-overflow: ellipsis;\n    :focus {\n        outline: none;\n    }\n`;","export default __webpack_public_path__ + \"static/media/logo.7c344053.png\";","import styled from 'styled-components';\n\nimport Toggle from './Toggle';\nimport SensorSelector from './SensorSelector';\nimport NameInput from './NameInput';\nimport BasicContainer from '../shared/BasicContainer';\nimport VertSpacer from '../shared/VertSpacer';\n\nimport logo from '../../assets/logo.png';\n\nexport default function Sidebar(props) {\n  return (\n    <SidebarContainer>\n      <img src={logo} alt='NU Formula Logo' />\n      <VertSpacer />\n      <BasicContainer>\n        <Toggle isLive={props.isLive} setIsLive={(newState) => props.setIsLive(newState)} />\n      </BasicContainer>\n      <VertSpacer />\n      {props.isLive &&\n        <>\n          <NameInput setSessionName={(newState) => props.setSessionName(newState)}/>\n          <VertSpacer />\n        </>\n      }\n      <SensorSelector\n        currentSensors={props.currentSensors}\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\n      />\n    </SidebarContainer>\n  );\n}\n\nconst SidebarContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 240px;\n  height: calc(100vh - 60px);\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","import styled from \"styled-components\";\n\nexport default function SearchBar() {\n  return(\n    <SearchContainer placeholder='Enter Name or Date'></SearchContainer>\n  );\n}\n\nconst SearchContainer = styled.input`\n  border: 1px solid #818181;\n  border-radius: 9px;\n  padding: 8px;\n  flex: 1;\n  margin-top: 10px;\n  margin-bottom: 10px; // Renders weird on web but works in electron\n`;","import styled from \"styled-components\";\n\nexport default function HorizSpacer() {\n  return(\n    <ButtonSpacer />\n  );\n}\n\nconst ButtonSpacer = styled.div`\n  width: 20px;\n`;","export default __webpack_public_path__ + \"static/media/upload.78116883.svg\";","import { useRef, useState } from 'react';\nimport styled from \"styled-components\";\n\nimport HorizSpacer from \"../../shared/HorizSpacer\";\n\nimport upload from '../../../assets/upload.svg';\n\nexport default function ButtonTray() {\n  const [file, setFile] = useState(null)\n\n  const uploadRef = useRef(null);\n\n  const handleFiles = (e) => {\n    let f = e.target.files[0];\n    setFile(f);\n  }\n\n  return(\n    <UploadHolder>\n      <input type='file' hidden ref={uploadRef} onChange={(e) => {handleFiles(e)}} />\n      <HorizSpacer />\n      <Clickable src={upload} alt='upload' width='25px' height='25px' onClick={() => {uploadRef.current.click()}} />\n      <HorizSpacer />\n    </UploadHolder>\n  );\n}\n\nconst UploadHolder = styled.div`\n  flex: 0.1;\n  max-width: 110px;\n  display: flex;\n  flex-direction: row;\n  justify-content: right;\n`;\n\nconst Clickable = styled.img`\n  cursor: pointer;\n`;","import styled from 'styled-components';\n\nexport default function SVGButton(props) {\n  return(\n    <StyledSVG\n      src={props.src}\n      alt={props.label}\n      width='25px'\n      height='25px'\n      onClick={() => {props.setViewState(props.label)}}\n      selected={props.selected}\n    />\n  );\n}\n\nconst StyledSVG = styled.img`\n  cursor: pointer;\n  filter: brightness(${props => (props.selected ? 0.5 : 1)});\n  transition: 0.07s ease;\n`;","import styled from \"styled-components\";\n\nexport default function RowHolder(props) {\n  return(\n    <StyledHolder>\n      {props.children}\n    </StyledHolder>\n  );\n}\n\nconst StyledHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;","export default __webpack_public_path__ + \"static/media/stop.6959f135.svg\";","export default __webpack_public_path__ + \"static/media/play.1e94e6ce.svg\";","export default __webpack_public_path__ + \"static/media/pause.48f7c4bd.svg\";","import SVGButton from './SVGButton';\nimport RowHolder from '../../shared/RowHolder';\nimport HorizSpacer from '../../shared/HorizSpacer';\n\nimport stop from '../../../assets/stop.svg';\nimport play from '../../../assets/play.svg';\nimport pause from '../../../assets/pause.svg';\n\nexport default function Topbar(props) {\n  return (\n    <RowHolder>\n      <SVGButton\n        src={stop}\n        label={'stop'}\n        setViewState={props.setViewState}\n        selected={props.viewState === 'stop'}\n      />\n      <HorizSpacer />\n      {props.viewState !== 'play'\n        ? <SVGButton\n            src={play}\n            label={'play'}\n            setViewState={props.setViewState}\n            selected={props.viewState === 'pause'}\n          />\n        : <SVGButton\n            src={pause}\n            label={'pause'}\n            setViewState={props.setViewState}\n            selected={props.viewState === 'play'}\n          />\n      }\n    </RowHolder>\n  );\n}","import styled from 'styled-components';\n\nexport default function StyledStatus(props) {\n  return(\n    <Status valid={props.valid}>\n      {props.children}\n    </Status>\n  );\n}\n\nconst Status = styled.div`\n  color: ${props => (props.valid ? '#42D060' : '#BE0707')}\n`;","import styled from 'styled-components';\n\nimport SearchBar from './SearchBar';\nimport Upload from './Upload';\nimport ButtonTray from './ButtonTray';\nimport RowHolder from '../../shared/RowHolder';\nimport StyledStatus from '../../shared/StyledStatus';\n\nexport default function Topbar(props) {\n\n  var display;\n  if (props.isLive) {\n    display =\n      <>\n        <RowHolder>\n          Status:\n          {props.receiving\n            ? <StyledStatus valid> Reading Live Data</StyledStatus> // Keep whitespace before text\n            : <StyledStatus> No Data Received</StyledStatus>            // Keep whitespace before text\n          }\n        </RowHolder>\n        <ButtonTray viewState={props.viewState} setViewState={props.setViewState} />\n      </>;\n  } else {\n    display =\n    <>\n      <SearchBar />\n      <Upload />\n    </>;\n  }\n\n  return (\n    <Container>\n      {display}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: calc(100% + 16px);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;","import styled from 'styled-components';\n\nexport default function NumGraphToggle(props) {\n  const handleClick = () => {\n    if (props.dispType === 'graphs') {\n      props.setDispType('numbers');\n    } else {\n      props.setDispType('graphs');\n    }\n  }\n\n  return(\n    <ReferenceFrame>\n      <StyledDiv>\n        <LabelHolder onClick={() => handleClick()}>\n          <Label active={props.dispType === 'graphs'}>Graph</Label>\n          <Label active={props.dispType === 'numbers'}>Number</Label>\n        </LabelHolder>\n        <Overlay onClick={() => handleClick()} isLeft={props.dispType === 'graphs'} />\n      </StyledDiv>\n    </ReferenceFrame>\n  );\n}\n\nconst ReferenceFrame = styled.div`\n  position: relative;\n  float: right;\n  right: 136px;\n  top: -42px;\n`;\n\nconst StyledDiv = styled.div`\n  width: 136px;\n  height: 34px;\n  top: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst LabelHolder = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  background: #fafafa;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Label = styled.div`\n  color: ${props => (props.active ? '#000' : '#838181')};\n  font-size: 12px;\n  z-index: 1;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.1s ease;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => (props.isLeft ? 0 : 68)}px;\n  width: 68px;\n  height: 100%;\n  background-color: #e5e4fB;\n  display: inline;\n  border-top-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\n  border-bottom-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\n  border-top-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\n  border-bottom-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\n  transition: all 0.1s ease;\n`;","export default __webpack_public_path__ + \"static/media/scrollleft.7b05da38.svg\";","export default __webpack_public_path__ + \"static/media/scrollright.8e3b1130.svg\";","export default __webpack_public_path__ + \"static/media/zoomin.f628affa.svg\";","export default __webpack_public_path__ + \"static/media/zoomout.dc533183.svg\";","import React, { useContext, useMemo, useCallback, useState, useEffect, useRef } from 'react'\nimport { extent, max, bisector } from 'd3-array';\nimport { MarkerArrow, MarkerCross, MarkerX, MarkerCircle, MarkerLine } from '@visx/marker';\nimport { useTooltip } from '@visx/tooltip';\nimport { localPoint } from '@visx/event';\nimport { Group } from '@visx/group';\nimport { LinePath, Bar, Line, stackOffset, AreaClosed } from '@visx/shape';\nimport * as allCurves from '@visx/curve';\nimport { scaleTime, scaleLinear } from '@visx/scale';\nimport { AxisLeft, AxisBottom } from '@visx/axis';\nimport styled from \"styled-components\";\nimport scrollleft from '../../../assets/scrollleft.svg';\nimport scrollright from '../../../assets/scrollright.svg';\nimport zoomin from '../../../assets/zoomin.svg';\nimport zoomout from '../../../assets/zoomout.svg';\nimport { GridRows, GridColumns } from '@visx/grid';\nimport { withTooltip, Tooltip, TooltipWithBounds, defaultStyles } from '@visx/tooltip';\nimport { WithTooltipProvidedProps } from '@visx/tooltip/lib/enhancers/withTooltip';\n\n\nlet t = -1; // init time\nconst n = 30; // amount of seconds to show\nlet initData = initialise(); //data arr\n\nfunction initialise() {\n    var time = -1;\n    var arr = [];\n    var data_length = 1;\n    for (var i = 0; i < data_length; i++) {\n        var obj = {\n            time: ++time,\n            value: Math.floor(Math.random() * 100)\n        };\n        arr.push(obj);\n    }\n    t = time;\n    return arr;\n}\n\nconst height = 300\nconst width = 800\n\nconst getX = (d) => d.time;\nconst getY = (d) => d.value;\n\n\nconst graph_offset = 30\n\n// scales\nlet xScaleInit = scaleLinear({\n    domain: [0, max(initData, getX)],\n    range: [0, width - 3*graph_offset]\n});\n\nlet yScaleInit = scaleLinear({\n    domain: [0, max(initData, getY) * 1.2],\n    range: [height * 0.85, height * 0.1]\n});\n\nexport default function Graph(props) {\n    const curveType = 'curveLinear'\n    const [graphData, setGD] = useState({lineData: initData, xScale: xScaleInit, yScale: yScaleInit, start:0, end:initData.length-1});\n    const wheelTimeout = useRef()\n\n    function updateScales(gd){\n        gd.xScale = scaleLinear({\n            domain: [getX(gd.lineData[Math.floor(gd.start)]), getX(gd.lineData[Math.floor(gd.end)])],\n            range: [0, width - 3*graph_offset]\n        });\n        gd.yScale = scaleLinear({\n            domain: [0, max(gd.lineData.slice(Math.floor(gd.start), Math.floor(gd.end)), getY) * 1.2],\n            range: [height * 0.85, height * 0.1]\n        })\n    }\n    function updateData(gd) {\n        t++;\n        if (gd.end >= n){gd.start++;}\n        gd.end++;\n        var obj = {\n            time: t,\n            value: Math.floor(Math.random() * 100)\n        };\n        gd.lineData.push(obj); // push new data into data set\n        // gd.xScale.domain([getX(gd.lineData[Math.floor(gd.start)]), getX(gd.lineData[Math.floor(gd.end)])]); // update scales\n        // gd.yScale.domain([0, max(gd.lineData.slice(Math.floor(gd.start), Math.floor(gd.end)), getY)]);\n        updateScales(gd);\n        props.rerender();\n    }\n\n    function lockWheel(){\n        // while wheel is moving, do not release the lock\n        clearTimeout(wheelTimeout.current)\n\n        // flag indicating to lock page scrolling (setTimeout returns a number)\n        wheelTimeout.current = setTimeout(() => {\n        wheelTimeout.current = false\n        }, 300)\n    }\n\n    function handleMouseScroll(e){\n        let gd = graphData;\n        let dir;\n        let scroll_amt = 0.2;\n        let zoom_amt = 0.2;\n        \n        lockWheel()\n\n        if (Math.abs(e.deltaX) > Math.abs(e.deltaY) && Math.abs(e.deltaX) > 1){\n            (e.deltaX < 0) ? dir = \"right\" : dir = \"left\"\n            scroll(gd, dir, scroll_amt)\n        } else {\n            (e.deltaY < 0) ? dir = \"in\" : dir = \"out\"\n            zoom(gd, dir, zoom_amt)\n        }\n    }\n\n    function zoom(gd, dir, amt){\n        if (dir == \"in\"){\n            if (gd.start < gd.end - 2) {\n                gd.start+= amt\n            };\n        } else if (dir == \"out\"){\n            if (gd.start > amt) {\n                gd.start-= amt\n            } \n        }\n        updateScales(gd);\n        props.rerender();\n    }\n\n    function scroll(gd, dir, amt){\n        if (dir == \"right\"){\n            if (gd.end < max(gd.lineData, getX) - amt) {\n                gd.start+= amt\n                gd.end+= amt\n            };\n        } else if (dir == \"left\"){\n            if (gd.start > amt) {\n                gd.start-= amt\n                gd.end-= amt\n            }\n        }\n        updateScales(gd);\n        props.rerender();\n    }\n\n    function checkKey(e) {\n        if (e.keyCode == '38') { zoom(graphData, \"in\", 1); lockWheel(); // up arrow \n        } else if (e.keyCode == '40') { zoom(graphData, \"out\", 1); lockWheel() // down arrow\n        } else if (e.keyCode == '37') { scroll(graphData, \"left\", 1); lockWheel() // left arrow \n        } else if (e.keyCode == '39') { scroll(graphData, \"right\", 1); lockWheel() // right arrow\n        }\n    }\n\n    useEffect(() => {\n        const cancelWheel = e => wheelTimeout.current && e.preventDefault()\n        document.body.addEventListener('wheel', cancelWheel, {passive:false})\n        return () => document.body.removeEventListener('wheel', cancelWheel)\n    }, [])\n\n    const { showTooltip,\n        tooltipData,\n        hideTooltip,\n        tooltipTop = 0,\n        tooltipLeft = 0, } = useTooltip();\n\n    const bisectTime = bisector((d) => d.time).left;\n\n    // tooltip handler\n    const handleTooltip = useCallback(\n        (event) => {\n          let { x } = localPoint(event) || { x: (graph_offset*2) }; // x of mouse\n          x -= (graph_offset*2)\n          const x0 = graphData.xScale.invert(x); // maps x -> time \n          const index = bisectTime(graphData.lineData, x0, 1); // finds index of the middle time\n          const d0 = graphData.lineData[index - 1]; \n          const d1 = graphData.lineData[index];\n          let d = d0;\n          if (d1 && getX(d1)) {\n            d = x0.valueOf() - getX(d0).valueOf() > getX(d1).valueOf() - x0.valueOf() ? d1 : d0;\n          }\n          showTooltip({\n            tooltipData: d,\n            tooltipLeft: graphData.xScale(getX(d)),\n            tooltipTop: graphData.yScale(getY(d)),\n            // tooltipTop: graphData.yScale(getY(d)),\n          });\n        },\n        [showTooltip, graphData.yScale, graphData.yScale],\n      );\n  return (\n        <GraphContainer onKeyDown={(e) => checkKey(e)}>\n            <button onClick={() => updateData(graphData)}>update</button> <br/>\n            <ButtonTray width={width}>\n                <div>\n                <Clickable src={scrollleft} alt='scroll left' width='25px' height='25px' onClick={() => {scroll(graphData, \"left\", 1)}} />\n                <Clickable src={scrollright} alt='scroll right' width='25px' height='25px' onClick={() => {scroll(graphData, \"right\", 1)}} />\n                </div>\n                <Clickable src={zoomin} alt='zoom in' width='25px' height='25px' onClick={() => {zoom(graphData, \"in\", 1)}} />\n                <Clickable src={zoomout} alt='zoom out' width='25px' height='25px' onClick={() => {zoom(graphData, \"out\", 1)}} />\n            </ButtonTray>\n            <SVGContainer width={width}>\n            <div>{props.sensorName}</div>\n            <svg width={width} height={height} onWheel={(e) => handleMouseScroll(e)}>\n                <MarkerCircle id=\"marker-circle\" fill=\"#5048E5\" size={1} refX={2} />\n                <rect width={width} height={height } fill=\"#fff\" rx={14} ry={14} />\n                <Group left={graph_offset*2}>\n                <GridRows scale={graphData.yScale} width={width - graph_offset*3} stroke=\"#e0e0e0\"/>\n                    <GridColumns scale={graphData.xScale} height={height-60} stroke=\"#e0e0e0\" top={30}/>\n                    <AxisBottom left={0} top={height-45} scale={graphData.xScale} stroke='#838181' label={\"bottom axis label\"}/>\n                    <AxisLeft left={0} scale={graphData.yScale} stroke='#838181' label={\"left axis label\"}/>\n                    {graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)+1).map((d, j) => (\n                        <circle\n                        key={j}\n                        r={2}\n                        cx={graphData.xScale(getX(d))}\n                        cy={graphData.yScale(getY(d))}\n                        stroke=\"#5048E5\"\n                        />\n                    ))}\n                    <LinePath\n                    curve={allCurves[curveType]}\n                    data={graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)+1)}\n                    x={(d) => graphData.xScale(getX(d)) ?? 0}\n                    y={(d) => graphData.yScale(getY(d)) ?? 0}\n                    stroke=\"#5048E5\"\n                    strokeWidth={2}\n                    strokeOpacity={1}\n                    shapeRendering=\"geometricPrecision\"\n                    markerMid=\"url(#marker-circle)\"\n                    markerStart=\"url(#marker-circle)\"\n                    markerEnd=\"url(#marker-circle)\"\n                    />\n                    <AreaClosed\n                        fill=\"#5048E515\"\n                        curve={allCurves[curveType]}\n                        data={graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)+1)}\n                        x={(d) => graphData.xScale(getX(d)) ?? 0}\n                        y={(d) => graphData.yScale(getY(d)) ?? 0}\n                        yScale={graphData.yScale}\n                    />\n                    <Bar\n                        x={0}\n                        y={0}\n                        width={width}\n                        height={height}\n                        fill=\"transparent\"\n                        rx={14}\n                        onTouchStart={handleTooltip}\n                        onTouchMove={handleTooltip}\n                        onMouseMove={handleTooltip}\n                        onMouseLeave={() => hideTooltip()}\n                    />\n                    {tooltipData && (\n                    <g>\n                        <Line\n                        from={{ x: tooltipLeft, y: height * 0.08 }}\n                        to={{ x: tooltipLeft, y: height * 0.85}}\n                        stroke=\"#5048E5\"\n                        strokeWidth={2}\n                        pointerEvents=\"none\"\n                        strokeDasharray=\"5,2\"\n                        />\n                        <circle\n                        cx={tooltipLeft}\n                        cy={tooltipTop + 1}\n                        r={4}\n                        fill=\"black\"\n                        fillOpacity={0.1}\n                        stroke=\"black\"\n                        strokeOpacity={0.1}\n                        strokeWidth={2}\n                        pointerEvents=\"none\"\n                        />\n                        <circle\n                        cx={tooltipLeft}\n                        cy={tooltipTop}\n                        r={4}\n                        fill=\"#5048E5\"\n                        stroke=\"white\"\n                        strokeWidth={2}\n                        pointerEvents=\"none\"\n                        />\n                        {/* <div>\n                        <TooltipWithBounds\n                            key={Math.random()}\n                            top={tooltipTop + 150}\n                            left={tooltipLeft + 40}\n                        >\n                            {`${getY(tooltipData)}`}\n                        </TooltipWithBounds>\n                        </div> */}\n                    </g>\n                    )}\n                    )\n                </Group>\n                    );\n          </svg>\n          </SVGContainer>\n          {tooltipData && (\n            <div>\n              <TooltipWithBounds\n                key={Math.random()}\n                top={tooltipTop + 15}\n                left={tooltipLeft + 40}\n                \n              >\n                {`${getY(tooltipData)}`}\n              </TooltipWithBounds>\n            </div>\n          )}\n        </GraphContainer>\n    )}\n\nconst Clickable = styled.img`\n  cursor: pointer;\n`;\n\nconst ButtonTray = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex-direction: column;\n  position: absolute;\n  top: 30px;\n  left: ${props=> props.width - 40}px ;\n`\n\nconst GraphContainer = styled.div`\n  position: relative;\n`;\n\nconst SVGContainer = styled.div`\n  border-radius: 14px;\n  border: 1px solid #838181;\n  padding: 10px;\n  width: ${props=> props.width}px;\n`","import Graph from './Graph';\nimport VertSpacer from '../../shared/VertSpacer';\n\nexport default function Graphs(props) {\n  return (\n    <>\n      {props.sensors.map((e, index) => {\n        return (\n          <div key={index}>\n            {index !== 0 && <VertSpacer />}\n            <Graph width={props.width} sensorName={e.label} k={index} rerender={() => {props.rerender()}}/>\n          </div>\n        );\n      })}\n    </>\n  );\n}","import styled from 'styled-components';\n\nexport default function Number(props) {\n  return(\n    <NumberContainer onMouseDown={() => {props.sendIndex()}}>\n      <Value percentage={props.percentage}>{Math.round(props.value * 100) / 100}</Value>\n      <Label unit>{props.unit}</Label>\n      <Label>{props.label}</Label>\n    </NumberContainer>\n  );\n}\n\nconst NumberContainer = styled.div`\n  width: 240px;\n  height: 190px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #818181;\n  user-select: none;\n`;\n\nconst Value = styled.div`\n  font-size: 72px;\n  color: ${props => ([\"hsl(\",((props.percentage)*120).toString(10),\",75%,50%)\"].join(\"\"))};\n`;\n\nconst Label = styled.div`\n  color: ${props => (props.unit ? '#000' : '#818181')};\n  margin-bottom: 10px;\n`;","import React, { Component } from 'react';\n\nconst Context = React.createContext(null);\nconst ContextConsumer = Context.Consumer;\n\nclass ContextProvider extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      dragging: false,\n      setMouseCoords: (x, y) => {\n        this.setState({ mouseX: x, mouseY: y });\n      },\n      setDragging: (x) => {\n        this.setState({ dragging: x });\n      }\n    };\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport { Context, ContextProvider, ContextConsumer }","import { useRef, useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\n\nimport Number from './Number';\n\nimport { Context } from '../../shared/Context';\n\nexport default function Numbers(props) {\n  let context = useContext(Context);\n\n  const [dndRect, setRect] = useState(0);\n  const [xRanges, setxRanges] = useState([]);\n  const [yRanges, setyRanges] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const [startX, setStartX] = useState(0);\n  const dndRef = useRef(null);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (dndRect) {\n      let ranges = getRanges();\n      setxRanges(ranges[0]);\n      setyRanges(ranges[1]);\n    }\n    //console.log(dndRect);\n  }, [dndRect, props]);\n\n  useEffect(() => {\n    // console.log(xRanges);\n    // console.log(yRanges);\n  }, [xRanges, yRanges]);\n\n  useEffect(() => {\n\n    if (!context.dragging) {\n      console.log(xRanges);\n      console.log(yRanges);\n      console.log(`${context.mouseX} ${context.mouseY}`);\n      let y = context.mouseY;\n      let x = context.mouseX;\n      for (let i = 0; i < yRanges.length; i++) {\n        if (y >= yRanges[i][0] && y <= yRanges[i][1]) {\n          if ((x - startX) > 0) {\n            if (xRanges[i])\n            if (xRanges[i][0] < x && xRanges[i][0] + xRanges[i][1] > x)\n            console.log(xRanges[i]);\n          } else {\n            // If dropped to left\n          }\n        }\n      }\n    } else {\n\n    }\n  }, [context.dragging]);\n\n  const handleResize = () => {\n    if (dndRef.current) {\n      setRect(dndRef.current.getBoundingClientRect());\n    }\n  }\n\n  const getRanges = () => {\n    const numberWidth = 240;\n    const numberHeight = 190;\n\n    let itemsPerRow = Math.floor(dndRect.width / numberWidth);\n    let spaceSize = (dndRect.width - (itemsPerRow * numberWidth)) / (2 * itemsPerRow);\n    let fullRows = Math.floor(props.sensors.length / itemsPerRow);\n\n    let extraItems = props.sensors.length % itemsPerRow;\n    let extraSize = (dndRect.width - (extraItems * numberWidth)) / (2 * extraItems);\n\n    let tempX = Array(((itemsPerRow * fullRows) + extraItems));\n    let tempY = Array(((itemsPerRow * fullRows) + extraItems));\n    let tempE = Array(((itemsPerRow * fullRows) + extraItems));\n    for (let i = 0; i < itemsPerRow; i++) {\n      let x = dndRect.x +  (spaceSize + (numberWidth / 2)) + (i * (numberWidth + (2 * spaceSize)));\n      for (let j = 0; j < fullRows; j++) {\n        let ind = i + (j * itemsPerRow);\n        tempX[ind] = [x, (spaceSize * 2) + numberWidth];\n\n        let y = j * (numberHeight + 14) + dndRect.y + 13;\n        tempY[ind] = [y - props.scrollHeight, y + numberHeight - props.scrollHeight];\n\n        if (i === 0 || i === itemsPerRow - 1) {\n          tempE[ind] = 1;\n        } else {\n          tempE[ind] = 0;\n        }\n      }\n    }\n\n    for (let i = 0; i < extraItems; i++) {\n      let x = dndRect.x + (extraSize + (numberWidth / 2)) + (i * (numberWidth + (2 * extraSize)));\n      tempX[(itemsPerRow * fullRows) + i] = [x, (extraSize * 2) + numberWidth];\n      \n      let y = fullRows * (numberHeight + 14) + dndRect.y + 13;\n      tempY[i + (fullRows * itemsPerRow)] = [y - props.scrollHeight, y + numberHeight - props.scrollHeight];\n    }\n\n    // console.log(tempY);\n    // console.log(context.mouseY + props.scrollHeight);\n\n    return [tempX, tempY];\n  }\n\n  return (\n    <NumberTray\n      className=\"numbers\"\n      ref={dndRef}\n    >\n      {props.sensors.map((e, index) => {\n        let val = Math.random();\n        return (\n          <Number\n            value={val*30}\n            percentage={val}\n            unit={'m/s'}\n            label={e.label}\n            sendIndex={() => {setCurrent(index); setStartX(xRanges[index])}}\n            key={index}\n          />\n        );\n      })}\n    </NumberTray>\n  );\n}\n\nconst NumberTray = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  margin-top: -12px;\n  > * {\n    margin-top: 12px;\n  }\n`;","import React, { Component, createRef } from 'react';\nimport styled from 'styled-components';\n\nimport NumGraphToggle from './NumGraphToggle';\nimport Graphs from './Graphs';\nimport Numbers from './Numbers';\n\nimport StyledStatus from '../../shared/StyledStatus';\n\nexport default class DataDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dispType: 'graphs',\n      scrollAmt: 0,\n      whatthefuck: true,\n    }\n\n    this.containerRef = null;\n\n    this.setContainerRef = (element) => {\n      this.containerRef = element;\n    }\n\n    this.updateWidth = () => {\n      if (this.containerRef) {\n        this.content = (this.state.dispType==='graphs')\n          ? <Graphs\n              viewState={this.props.viewState}\n              sensors={this.props.sensors}\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n              width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\n              rerender={() => {this.setState({ whatthefuck: true })}}\n            />\n          : <Numbers\n              viewState={this.props.viewState}\n              sensors={this.props.sensors}\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n            />;\n        this.setState({ whatthefuck: true });\n      }\n    }\n\n    this.handleScroll = () => {\n      const scrollAmt = this.containerRef.scrollTop;\n      this.setState({ scrollAmt });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateWidth);\n    this.updateWidth();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWidth);\n  }\n\n  render() {\n    return(\n      <Container ref={this.setContainerRef} onScroll={this.handleScroll}>\n        <NumGraphToggle\n          dispType={this.state.dispType}\n          setDispType={(x) => this.setState({ dispType: x })}\n        />\n        {(this.props.sensors && this.props.sensors.length > 0)\n          ? this.state.dispType==='graphs'\n            ? <Graphs\n                viewState={this.props.viewState}\n                sensors={this.props.sensors}\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n                width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\n                rerender={() => {this.setState({ whatthefuck: true })}}\n              />\n            : <Numbers\n                viewState={this.props.viewState}\n                scrollHeight={this.state.scrollAmt}\n                sensors={this.props.sensors}\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\n              />\n          : <StyledStatus>No Selected Sensors</StyledStatus>\n        }\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  width: 100%;\n  border: 1px solid #818181;\n  border-radius: 9px;\n  padding: 8px;\n  height: 100%;\n  padding-top: 50px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar-thumb {\n    background-color: #dadce0;\n    border: 4px solid transparent;\n    border-radius: 8px;\n    background-clip: padding-box;  \n  }\n  \n  ::-webkit-scrollbar {\n    width: 16px;\n  }\n`;","import { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Topbar from './topbar/Topbar';\nimport DataDisplay from './data-display/DataDisplay';\nimport VertSpacer from '../shared/VertSpacer';\n\nexport default function Main(props) {\n  let [viewState, setViewState] = useState('stop');\n\n  return(\n    <MainContainer>\n      <Topbar\n        isLive={props.isLive}\n        receiving={false}\n        viewState={viewState}\n        setViewState={(newState) => setViewState(newState)}\n      />\n      <VertSpacer />\n      <DataDisplay\n        viewState={viewState}\n        sensors={props.currentSensors}\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\n      />\n    </MainContainer>\n  );\n}\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 300px;\n  height: calc(100vh - 80px);\n  width: calc(100vw - 420px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 60px;\n  padding-right: 60px;\n  padding-bottom: 30px;\n  padding-top: 50px;\n`;","import styled from 'styled-components';\n\nimport { useState, useContext, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\n\nimport Sidebar from './components/sidebar/Sidebar';\nimport Main from './components/main/Main';\n\nimport { Context } from './components/shared/Context';\n\nexport default function App() {\n  let context = useContext(Context);\n\n  var [isLive, setIsLive] = useState(false);\n  var [currentSensors, setCurrentSensors] = useState([]);\n  var [sessionName, setSessionName] = useState('');\n\n  const handleMouseDown = (e) => {\n    context.setMouseCoords(e.clientX, e.clientY);\n    context.setDragging(true);\n  }\n\n  const handleMouseUp = (e) => {\n    context.setMouseCoords(e.clientX, e.clientY);\n    context.setDragging(false);\n  }\n\n  useEffect(() => {\n    //console.log(`${context.mouseX} ${context.mouseY}`);\n  }, [context.mouseX, context.mouseY, context.dragging])\n\n  return (\n    <div onMouseDown={(e) => {handleMouseDown(e)}} onMouseUp={(e) => {handleMouseUp(e)}}>\n      <GlobalStyle/>\n      <Sidebar\n        isLive={isLive} setIsLive={(next) => setIsLive(next)}\n        currentSensors={currentSensors} setCurrentSensors={(newState) => setCurrentSensors(newState)}\n        setSessionName={(newState) => setSessionName(newState)}\n      />\n      <Main\n        isLive={isLive}\n        currentSensors={currentSensors} setCurrentSensors={(newState) => setCurrentSensors(newState)}\n      />\n    </div>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Open Sans', sans-serif;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './components/shared/Context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}